/* o método updateOne() é o mesmo que você já utilizou nos exemplos anteriores. A única
diferença é a inclusão do operador $push . O resultado dessa operação é um documento com
o seguinte formato: */
  db.supplies.updateOne(
    { _id: 1 },
    {
    $push: {
        items: {
          "name": "notepad",
          "price":  35.29,
          "quantity": 2,
        },
      },
    },
    { upsert: true },
  );

/* Se você quiser adicionar múltiplos valores a um array , isso também é possível
utilizando o operador $push , mas dessa vez será necessário adicionar o modificador
$each. */
db.supplies.updateOne(
  {},
  {
    $push: {
      items: {
        $each: [
          {
            "name": "pens",
            "price": 56.12,
            "quantity": 5,
          },
          {
            "name": "envelopes",
            "price": 19.95,
            "quantity": 8,
          },
        ],
      },
    },
  },
  { upsert: true },
);

/* Mistura com outros operadores (sort e slice) */
db.supplies.updateOne(
  { _id: 1 },
  {
    $push: {
      items: {
        $each: [
          {
            "name" : "notepad",
            "price" : 35.29,
            "quantity" : 2,
          },
          {
            "name": "envelopes",
            "price": 19.95,
            "quantity": 8,
          },
          {
            "name": "pens",
            "price": 56.12,
            "quantity": 5,
          },
        ],
        $sort: { quantity: -1 },
        $slice: 2,
      },
    },
  },
  { upsert: true },
);

/* Operador $pop */

db.supplies.updateOne({ _id: 1 }, { $pop: { items: -1 } });

db.recipes.updateOne( { title: "Panqueca Simples" }, { $set: { "ingredients.1.unit": "xícara" } } );

db.recipes.updateOne(
  { title: "Panqueca Simples" },
  {
    $set : {
      "ingredients.$[elemento].name": "Farinha Integral",
    },
  },
  { arrayFilters: [ { "elemento.name": "Farinha" } ] },
);

db.recipes.find();
