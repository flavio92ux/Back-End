/* 1- Você pode utilizar o operador $group para contar o número de documentos
da coleção sales */
db.sales.aggregate({ $group: { _id: null, count: { $sum: 1 } } });

/* 2- Retornando valores distintos */
db.sales.aggregate({ $group: { _id: "$item", count: { $sum: 1 } } });

/* 3- Somando valores */
db.sales.aggregate({
  $group: {
    _id: "$item",
    totalSaleAmount: {
      $sum: {
        $multiply: ["$price", "$quantity"],
      },
    },
  },
});

/* 4- Having (do Mysql), combinando estágios no aggregate */
db.sales.aggregate([
  // Primeiro Estágio
  {
    $group: {
      _id : "$item",
      totalSaleAmount: {
        $sum: {
          $multiply: ["$price", "$quantity"]
        }
      }
    }
  },
  // Segundo Estágio
  {
    $match: { "totalSaleAmount": { $gte: 100 } }
  }
]);

/* 5- Agrupando por null */
db.sales.aggregate([
  {
    $group : {
      _id : null,
      totalSaleAmount: {
        $sum: { $multiply: ["$price", "$quantity"] }
      },
      averageQuantity: { $avg: "$quantity" },
      count: { $sum: 1 }
    }
  }
]);
