/* 1- Selecione todos os clientes com as suas respectivas
transações feitas; */
db.clients.aggregate([
  { 
    $lookup: {
      from: 'transactions',
      localField: 'name',
      foreignField: 'from',
      as: 'aggregate'
    },
  },
]);

db.clients.aggregate([
  {
    $lookup: {
      from: "transactions",
      let: { user_name: "$name" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$from", "$$user_name"],
            }
          }
        }
      ],
      as: "aggregate"
    }
  }
]);

/* 2- Selecione os quatro primeiros clientes com as suas respectivas
transações recebidas ordenados pelo estado em ordem alfabética; */
db.clients.aggregate([
  { 
    $lookup: {
      from: 'transactions',
      let: { user_name: "$name" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$to", "$$user_name"],
            }
          }
        }
      ],
      as: 'aggregate'
    },
  },
  {
    $unwind: "$aggregate"
  },
  {
    $group: { _id: "$name", transactions: { $sum: "$aggregate.value" } },
  },
  {
    $sort: { State: 1 }
  },
  {
    $limit: 4
  }
]);

/* 3- Selecione todos os cliente do estado da "Florida" e suas respectivas
transações recebidas */
db.clients.aggregate([
  {
    $match: { State: "Florida" }
  },
  { 
    $lookup: {
      from: 'transactions',
      let: { userName: "$name" },
      pipeline: [
        { $match:
          { $expr: {
            $eq: ["$to", "$$userName"] },
          },
        },
      ],
      as: 'string'
    },
  },
]);

db.clients.find();
db.transactions.find();
